CC=cl
CFLAGS= /O2 /Ot /Za /Tc 
O=.o.win
ext=.win

allFILES= \
   shellSort$O \
   genMath$O \
   charCp$O \
   ulCp$O \
   numToStr$O \
   base10str$O \
   codonTbl$O \
   seqST$O \
   kmerCnt$O \
   geneCoord$O \
   samEntry$O \
   trimSam$O \


all: $(allFILES)

trimSam$O: trimSam.c trimSam.h samEntry$O dataTypeShortHand.h
	$(CC) /Fo:trimSam$O /c $(CFLAGS) trimSam.c

samEntry$O: samEntry.c samEntry.h dataTypeShortHand.h ntTo5Bit.h numToStr$O base10str$O ulCp$O
	$(CC) /Fo:samEntry$O /c $(CFLAGS) samEntry.c

geneCoord$O: geneCoord.c geneCoord.h dataTypeShortHand.h base10str$O ulCp$O genMath$O
	$(CC) /Fo:geneCoord$O /c $(CFLAGS) geneCoord.c

kmerCnt$O: kmerCnt.c kmerCnt.h dataTypeShortHand.h ulCp$O ntTo2Bit.h
	$(CC) /Fo:kmerCnt$O /c $(CFLAGS) kmerCnt.c

seqST$O: seqST.c seqST.h dataTypeShortHand.h ulCp$O
	$(CC) /Fo:seqST$O /c $(CFLAGS) seqST.c

codonTbl$O: codonTbl.c codonTbl.h ntTo2Bit.h revNtTo2Bit.h dataTypeShortHand.h
	$(CC) /Fo:codonTbl$O /c $(CFLAGS) codonTbl.c

base10str$O: base10str.c base10str.h
	$(CC) /Fo:base10str$O /c $(CFLAGS) base10str.c

numToStr$O: numToStr.c numToStr.h
	$(CC) /Fo:numToStr$O /c $(CFLAGS) numToStr.c

ulCp$O: ulCp.c ulCp.h
	$(CC) /Fo:ulCp$O /c $(CFLAGS) ulCp.c

charCp$O: charCp.c charCp.h
	$(CC) /Fo:charCp$O /c $(CFLAGS) charCp.c

genMath$O: genMath.c genMath.h
	$(CC) /Fo:genMath$O /c $(CFLAGS) genMath.c

shellSort$O: shellSort.c shellSort.h
	$(CC) /Fo:shellSort$O /c $(CFLAGS) shellSort.c

clean:
	del *$O
